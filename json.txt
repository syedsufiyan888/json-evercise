// JSON Data Manipulation Exercises for Beginners.

// JSON data (students array with name, age, address containing pincode, city, and country)
// Use this data to solve the exercises
const students = [
    { "name": "John Doe", "age": 20, "address": { "pincode": "100001", "city": "New York", "country": "USA" } },
    { "name": "Alice Smith", "age": 22, "address": { "pincode": "200002", "city": "Los Angeles", "country": "USA" } },
    { "name": "Rahul Mehta", "age": 21, "address": { "pincode": "110011", "city": "Delhi", "country": "India" } },
    { "name": "Maria Garcia", "age": 23, "address": { "pincode": "28013", "city": "Madrid", "country": "Spain" } },
    { "name": "Sophia Brown", "age": 19, "address": { "pincode": "SW1A 1AA", "city": "London", "country": "UK" } },
    { "name": "Liam Nguyen", "age": 20, "address": { "pincode": "75001", "city": "Paris", "country": "France" } },
    { "name": "Emma Johnson", "age": 21, "address": { "pincode": "90001", "city": "Chicago", "country": "USA" } },
    { "name": "David Chen", "age": 22, "address": { "pincode": "200080", "city": "Shanghai", "country": "China" } },
    { "name": "Nina Patel", "age": 24, "address": { "pincode": "400001", "city": "Mumbai", "country": "India" } },
    { "name": "Carlos Sanchez", "age": 23, "address": { "pincode": "01000", "city": "Mexico City", "country": "Mexico" } }
];

// 1. Accessing Data
// - Write a function that takes in the JSON data and prints out all the students' names.
// - Create a function that lists all students who are from the USA.
// - Write a function to find the city of a student based on their name. If the student is not found, return "Student not found".

// 2. Filtering and Mapping
// - Write a function that returns an array of all students who are above 21 years old.
// - Create a function that returns an array of names of students from a given country, like "India" or "Japan".
// - Write a function that returns an array of objects with only name and age properties for each student.

// 3. Updating and Adding Data
// - Write a function to add a new student to the JSON data. Accept name, age, pincode, city, and country as inputs.
// - Create a function that updates the city of a student based on their name. If the student isn’t found, return "Student not found".
// - Write a function that increases the age of each student by 1 (e.g., for updating a new academic year).

// 4. Counting and Summing Data
// - Write a function to count how many students are from each country. Return the result as an object, e.g., { "USA": 5, "India": 3 }.
// - Write a function that calculates the average age of all students.
// - Create a function that calculates the total number of students who are older than 22.

// 5. Searching and Sorting
// - Write a function to search for students by city and return a list of names of students from that city.
// - Create a function that sorts the students by age in ascending order and prints their names and ages.
// - Write a function to find the oldest student and print their name, age, and city.

// 6. Transforming Data
// - Write a function that returns a new JSON array with each student's name in uppercase.
// - Create a function that removes students who are younger than 20 and returns the updated JSON array.
// - Write a function to transform each student’s country to lowercase and return the updated JSON array.

// 7. Extracting Unique Data
// - Write a function that returns an array of unique countries represented in the JSON data.
// - Create a function that returns all unique pincodes from the JSON data.
// - Write a function that returns a list of students who live in cities with duplicate names (e.g., if there were multiple entries for "Paris").

// 8. Challenge Questions
// - Write a function that groups students by country into separate arrays. Return an object where each key is a country and the value is an array of students from that country.
// - Create a function that finds the most common city among all students.
// - Write a function that returns a list of students sorted first by country and then by city within each country.

